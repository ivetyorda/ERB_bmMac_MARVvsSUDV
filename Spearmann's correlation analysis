#Before you begin, create and save a csv table (can use Excel) summarizing all the DEGs you're interested to include in the correlation analysis
#set directory to location of csv table
getwd()
setwd("C:/Users/user/folder/correlationDEGtable.csv/")

#Load necessary packages
library(dplyr)
library(tidyr)
library(ggplot2)
library(stats)
library(readr)
library(polyclip)
library(tweenr)
library(ggforce)
library(pheatmap)
library(stringr)
library(tibble)
library(RColorBrewer)
library(corrr)
library(corrplot)

#If you created your csv table with Excel, include "sep = ";"" to avoid errors when arranging the dataframe.
data <- read.csv("C:/Users/user/folder/correlationDEGtable.csv/", sep = ";")

#Check the first 10 lines to check the file
head(data, 10)

#Set gene IDs as row names, remove column 1 and replace NA values with 0s
data <- data[,-1]
head(data, 10)
as.data.frame(data)

#Start correlation analysis
cor(data, use="complete.obs", method="spearman")

correlated <- cor(data, use="complete.obs", method="spearman")
correlated

corrplot(correlated,
         method = "number",
         type = "upper",
         colorRampPalette(rev(brewer.pal(n = 11, name = "Spectral")))(11))

#To plot graphs two genes at a time

library("ggpubr")

ggscatter(data, x = "gene1", y = "gene2", 
          add = "reg.line", conf.int = TRUE, 
          cor.coef = TRUE, cor.method = "spearman",
          xlab = "gene1", ylab = "gene2",
          shape=16, size=4, rug = TRUE, color = "grey")

show_point_shapes()

#To mask insignificant correlations (leaves the cells blank)
corrplot(correlated, type="upper", 
         sig.level = 0.05, insig = "blank")

---
#Additional
#To check individual p-values

pvaluecheck <-cor.test(data$gene1, data$gene2,  method = "spearman")
pvaluecheck
